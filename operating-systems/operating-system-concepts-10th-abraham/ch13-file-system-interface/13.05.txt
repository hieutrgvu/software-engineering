13.5 Explain the purpose of the open() and close() operations.

********************************************************************************
Resolved by: Hieu Vu
********************************************************************************

open(): Rather than have all file operations specify a file name, causing the
operating system to evaluate the name, check access permis- sions, and so on,
all operations except create and delete require a file open() first. If
successful, the open call returns a file handle that is used as an argument in
the other calls.

The OS keeps a table, called the open-file table, containing information about
all open files. When a file operation is requested, the file is specified via an
index into this table, so no searching is required. When the file is no longer
being actively used, it is closed by the process, and the operating system
removes its entry from the open-file table, potentially releasing locks.

Each entry in the per-process table in turn points to a system-wide open-file
table. The system-wide table contains process-independent information, such as
the location of the file on disk, access dates, and file size. Once a file has
been opened by one process, the system-wide table includes an entry for the
file. When another process executes an open() call, a new entry is simply added
to the process’s open-file table pointing to the appropriate entry in the
system- wide table. Typically, the open-file table also has an open count
associated with each file to indicate how many processes have the file open.
Each close() decreases this open count, and when the open count reaches zero,
the file is no longer in use, and the file’s entry is removed from the
open-file table.
