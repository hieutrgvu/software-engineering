10.7 Consider the two-dimensional array A:

    int A[][] = new int[100][100];

where A[0][0] is at location 200 in a paged memory system with pages of size
200. A small process that manipulates the matrix resides in page 0 (locations 0
to 199). Thus, every instruction fetch will be from page 0.

For three page frames, how many page faults are generated by the following
array-initialization loops? Use LRU replacement, and assume that page frame 1
contains the process and the other two are initially empty.

a.  for (int j = 0; j < 100; j++)
      for (int i = 0; i < 100; i++)
        A[i][j] = 0;

b.  for (int i = 0; i < 100; i++)
      for (int j = 0; j < 100; j++)
        A[i][j] = 0;

********************************************************************************
Resolved by: Hieu Vu
********************************************************************************

Page 0 - Frame 1 entry is fixed in page table because i and j are referenced
in each iteration. Frame 0 and 2 are alternate for page swapping.

a. Every 2 iteration in inner loop, a page fault will occur.
--> 100 * 100 / 2 = 5000 page faults

b. Inner loop always accesses 100 consecutive elements on the same page. Every
2 iteration in outer loop, a page fault will occur.
--> 100 / 2 = 50 page faults
